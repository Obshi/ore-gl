!function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="/gl/js/",n(n.s=2)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n(1),i=function(){function t(t,e,n,r){this._values=new Float32Array([t,e,n,r])}return t.identity=function(){return new t(1,0,0,1)},Object.defineProperty(t.prototype,"values",{get:function(){return this._values},enumerable:!0,configurable:!0}),t.prototype.toString=function(){return this._values.toString()},t}();e.Matrix2x2=i;var o=function(){function t(t,e,n,r,i,o,s,a,u){this._values=new Float32Array([t,e,n,r,i,o,s,a,u])}return t.identity=function(){return new t(1,0,0,0,1,0,0,0,1)},Object.defineProperty(t.prototype,"values",{get:function(){return this._values},enumerable:!0,configurable:!0}),t.prototype.toString=function(){return this._values.toString()},t}();e.Matrix3x3=o;var s=function(){function t(t,e,n,r,i,o,s,a,u,l,c,h,f,g,p,v){this._values=new Float32Array([t,e,n,r,i,o,s,a,u,l,c,h,f,g,p,v])}return t.identity=function(){return new t(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)},t.translation=function(e,n,r){return new t(1,0,0,0,0,1,0,0,0,0,1,0,e,n,r,1)},t.scaling=function(e,n,r){return new t(e,0,0,0,0,n,0,0,0,0,r,0,0,0,0,1)},t.rotationX=function(e){var n=Math.sin(e),r=Math.cos(e);return new t(1,0,0,0,0,r,n,0,0,-n,r,0,0,0,0,1)},t.rotationY=function(e){var n=Math.sin(e),r=Math.cos(e);return new t(r,0,-n,0,0,1,0,0,n,0,r,0,0,0,0,1)},t.rotationZ=function(e){var n=Math.sin(e),r=Math.cos(e);return new t(r,n,0,0,-n,r,0,0,0,0,1,0,0,0,0,1)},t.rotationAround=function(t,e){return r.Quaternion.rotationAround(t,e).toRotationMatrix4()},t.lookAt=function(e,n,r){var i=e.sub(n).normalize(),o=r.cross(i).normalize(),s=i.cross(o).normalize();return new t(o.x,s.x,i.x,0,o.y,s.y,i.y,0,o.z,s.z,i.z,0,-e.dot(o),-e.dot(s),-e.dot(i),1)},t.orthographic=function(e){var n=e.top,r=e.bottom,i=e.left,o=e.right,s=e.near,a=e.far;return new t(2/(o-i),0,0,0,0,2/(n-r),0,0,0,0,-2/(a-s),0,-(o+i)/(o-i),-(n+r)/(n-r),-(a+s)/(a-s),1)},t.frustum=function(e){var n=e.top,r=e.bottom,i=e.left,o=e.right,s=e.near,a=e.far;return new t(2*s/(o-i),0,0,0,0,2*s/(n-r),0,0,(o+i)/(o-i),(n+r)/(n-r),-(a+s)/(a-s),-1,0,0,-2*a*s/(a-s),0)},t.perspective=function(e){var n=e.near*Math.tan(.5*e.fovYRadian),r=2*n,i=e.aspectRatio*r,o=-.5*i,s=o+i,a=n-r;return t.frustum({top:n,bottom:a,left:o,right:s,near:e.near,far:e.far})},t.prototype.mulByMatrix4x4=function(e){var n=this._values[0],r=this._values[4],i=this._values[8],o=this._values[12],s=this._values[1],a=this._values[5],u=this._values[9],l=this._values[13],c=this._values[2],h=this._values[6],f=this._values[10],g=this._values[14],p=this._values[3],v=this._values[7],x=this._values[11],d=this._values[15],y=e.values[0],m=e.values[4],b=e.values[8],_=e.values[12],E=e.values[1],R=e.values[5],T=e.values[9],w=e.values[13],F=e.values[2],A=e.values[6],P=e.values[10],z=e.values[14],B=e.values[3],O=e.values[7],M=e.values[11],U=e.values[15];return new t(n*y+r*E+i*F+o*B,s*y+a*E+u*F+l*B,c*y+h*E+f*F+g*B,p*y+v*E+x*F+d*B,n*m+r*R+i*A+o*O,s*m+a*R+u*A+l*O,c*m+h*R+f*A+g*O,p*m+v*R+x*A+d*O,n*b+r*T+i*P+o*M,s*b+a*T+u*P+l*M,c*b+h*T+f*P+g*M,p*b+v*T+x*P+d*M,n*_+r*w+i*z+o*U,s*_+a*w+u*z+l*U,c*_+h*w+f*z+g*U,p*_+v*w+x*z+d*U)},t.prototype.mulByMatrix4=function(t){return this.mulByMatrix4x4(t)},t.prototype.translate=function(e,n,r){var i=t.translation(e,n,r);return this.mulByMatrix4x4(i)},t.prototype.scale=function(e,n,r){var i=t.scaling(e,n,r);return this.mulByMatrix4x4(i)},t.prototype.rotateX=function(e){var n=t.rotationX(e);return this.mulByMatrix4x4(n)},t.prototype.rotateY=function(e){var n=t.rotationY(e);return this.mulByMatrix4x4(n)},t.prototype.rotateZ=function(e){var n=t.rotationZ(e);return this.mulByMatrix4x4(n)},t.prototype.rotateAround=function(e,n){var r=t.rotationAround(e,n);return this.mulByMatrix4x4(r)},Object.defineProperty(t.prototype,"values",{get:function(){return this._values},enumerable:!0,configurable:!0}),t.prototype.toString=function(){return this._values.toString()},t}();e.Matrix4x4=s,e.Matrix2=i,e.Matrix3=o,e.Matrix4=s},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n(0),i=function(){function t(t,e,n,r){this._values=new Float32Array([t,e,n,r])}return t.rotationAround=function(e,n){var r=Math.sin(n/2),i=Math.cos(n/2);return new t(e.x*r,e.y*r,e.z*r,i)},t.prototype.normalize=function(){var e=this.magnitude;if(0===e)return this;var n=1/e;return new t(this.x*n,this.y*n,this.z*n,this.w*n)},t.prototype.add=function(e){return new t(this.x+e.x,this.y+e.y,this.z+e.z,this.w+e.w)},t.prototype.mulByScalar=function(e){return new t(this.x*e,this.y*e,this.z*e,this.w*e)},t.prototype.dot=function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},t.prototype.slerp=function(t,e,n){void 0===n&&(n={chooseShorterAngle:!0});var r=this.dot(t),i=t;r<0&&(r=-r,i=t.mulByScalar(-1));var o=Math.acos(r),s=Math.sin(o),a=this.mulByScalar(Math.sin((1-e)*o)/s),u=i.mulByScalar(Math.sin(e*o)/s);return a.add(u)},Object.defineProperty(t.prototype,"magnitude",{get:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"norm",{get:function(){return this.magnitude},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"x",{get:function(){return this._values[0]},set:function(t){this._values[0]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"y",{get:function(){return this._values[1]},set:function(t){this._values[1]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"z",{get:function(){return this._values[2]},set:function(t){this._values[2]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"w",{get:function(){return this._values[3]},set:function(t){this._values[3]=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"values",{get:function(){return this._values},enumerable:!0,configurable:!0}),t.prototype.toRotationMatrix4=function(){var t=this.x,e=this.y,n=this.z,i=this.w,o=1-2*e*e-2*n*n,s=2*t*e-2*i*n,a=2*t*n+2*i*e,u=2*t*e+2*i*n,l=1-2*t*t-2*n*n,c=2*e*n-2*i*t,h=2*t*n-2*i*e,f=2*e*n+2*i*t,g=1-2*t*t-2*e*e;return new r.Matrix4x4(o,u,h,0,s,l,f,0,a,c,g,0,0,0,0,1)},t.prototype.toString=function(){return"Quaternion("+this.x+", "+this.y+", "+this.z+", "+this.w+")"},t}();e.Quaternion=i},function(t,e,n){const{Vector3:r,Vector4:i,Matrix4:o}=n(3),s=n(6),a=n(8),u=n(9),l=n(10);var c,h,f,g,p=0;window.addEventListener("load",()=>{c=document.getElementById("canvas");window.devicePixelRatio;c.width=.5*window.innerWidth,c.height=.5*window.innerHeight,h=new s(c,{r:0,g:0,b:0}),f=h.getProgram(a,l),g=h.getProgram(a,u),function(){h.addAttribute(f,"position",3),h.addUniform(f,"resolution","uniform2fv"),h.addUniform(f,"preFrameTex","uniform1i"),h.addUniform(f,"time","uniform1f"),h.addAttribute(g,"position",3),h.addUniform(g,"texture","uniform1i"),h.addUniform(g,"resolution","uniform2fv"),h.cFbuffer(c.width,c.height,0),h.cFbuffer(c.width,c.height,1);var t=0;!function e(){p+=.01666;const n=o.lookAt(new r(0,2,5),new r(0,0,0),new r(0,1,0));const i=o.perspective({fovYRadian:60*Math.PI/180,aspectRatio:window.innerWidth/window.innerHeight,near:.1,far:10});const s=o.identity().rotateY(0).scale(2,2,2);i.mulByMatrix4(n).mulByMatrix4(s);t=0==t?1:0;h.selectFramebuffer(t);h.selectUseProgram(f);h.setAttribute("position",h.screenVBO,h.screenIBO);h.setUniform("resolution",[c.width,c.height]);h.setUniform("preFrameTex",0==t?1:0);h.setUniform("time",p);h.clear();h.drawElements();h.flush();h.selectFramebuffer(null);h.selectUseProgram(g);h.setAttribute("position",h.screenVBO,h.screenIBO);h.setUniform("texture",t);h.setUniform("resolution",[c.width,c.height]);h.clear();h.drawElements();h.flush();requestAnimationFrame(e)}()}()},!1)},function(t,e,n){"use strict";function r(t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}Object.defineProperty(e,"__esModule",{value:!0}),r(n(4)),r(n(0)),r(n(1))},function(t,e,n){"use strict";var r=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};return function(e,n){function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(e,"__esModule",{value:!0});var i=n(5),o=function(t){function e(e,n){var r=t.call(this)||this;return r._values=new Float32Array([e,n]),r}return r(e,t),e.prototype.add=function(t){return new e(this.x+t.x,this.y+t.y)},e.prototype.sub=function(t){return new e(this.x-t.x,this.y-t.y)},e.prototype.mulByScalar=function(t){return new e(this.x*t,this.y*t)},e}(i.Vector2Base);e.Float32Vector2=o;var s=function(t){function e(e,n,r){var i=t.call(this)||this;return i._values=new Float32Array([e,n,r]),i}return r(e,t),e.prototype.add=function(t){return new e(this.x+t.x,this.y+t.y,this.z+t.z)},e.prototype.sub=function(t){return new e(this.x-t.x,this.y-t.y,this.z-t.z)},e.prototype.mulByScalar=function(t){return new e(this.x*t,this.y*t,this.z*t)},e.prototype.dot=function(t){return this.x*t.x+this.y*t.y+this.z*t.z},e.prototype.cross=function(t){return new e(this.y*t.z-this.z*t.y,this.z*t.x-this.x*t.z,this.x*t.y-this.y*t.x)},e.prototype.normalize=function(){var t=this.magnitude;return 0===t?this:new e(this.x/t,this.y/t,this.z/t)},Object.defineProperty(e.prototype,"xy",{get:function(){return new o(this.x,this.y)},enumerable:!0,configurable:!0}),e}(i.Vector3Base);e.Float32Vector3=s;var a=function(t){function e(e,n,r,i){var o=t.call(this)||this;return o._values=new Float32Array([e,n,r,i]),o}return r(e,t),e.prototype.add=function(t){return new e(this.x+t.x,this.y+t.y,this.z+t.z,this.w+t.w)},e.prototype.sub=function(t){return new e(this.x-t.x,this.y-t.y,this.z-t.z,this.w-t.w)},e.prototype.mulByScalar=function(t){return new e(this.x*t,this.y*t,this.z*t,this.w*t)},Object.defineProperty(e.prototype,"xyz",{get:function(){return new s(this.x,this.y,this.z)},enumerable:!0,configurable:!0}),e}(i.Vector4Base);e.Float32Vector4=a,e.Vector2=o,e.Vector3=s,e.Vector4=a},function(t,e,n){"use strict";var r=this&&this.__extends||function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};return function(e,n){function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){}return Object.defineProperty(t.prototype,"values",{get:function(){return this._values},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"magnitude",{get:function(){var t=this._values.reduce(function(t,e){return t+Math.pow(e,2)},0);return Math.sqrt(t)},enumerable:!0,configurable:!0}),t.prototype.toString=function(){return"Vector"+this._values.length+"("+this._values.join(", ")+")"},t}();e.VectorBase=i;var o=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),Object.defineProperty(e.prototype,"x",{get:function(){return this._values[0]},set:function(t){this._values[0]=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"y",{get:function(){return this._values[1]},set:function(t){this._values[1]=t},enumerable:!0,configurable:!0}),e}(i);e.Vector2Base=o;var s=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),Object.defineProperty(e.prototype,"x",{get:function(){return this._values[0]},set:function(t){this._values[0]=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"y",{get:function(){return this._values[1]},set:function(t){this._values[1]=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"z",{get:function(){return this._values[2]},set:function(t){this._values[2]=t},enumerable:!0,configurable:!0}),e}(i);e.Vector3Base=s;var a=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),Object.defineProperty(e.prototype,"x",{get:function(){return this._values[0]},set:function(t){this._values[0]=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"y",{get:function(){return this._values[1]},set:function(t){this._values[1]=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"z",{get:function(){return this._values[2]},set:function(t){this._values[2]=t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"w",{get:function(){return this._values[3]},set:function(t){this._values[3]=t},enumerable:!0,configurable:!0}),e}(i);e.Vector4Base=a},function(t,e,n){const r=n(7);t.exports=class{constructor(t,e){this.gl=t.getContext("webgl"),this.canvas=t,this.program=[],this.fBuffer={},this.currentProgram,this.ext,this.gl.enable(this.gl.BLEND),this.gl.blendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA),this.gl.clearColor(e.r,e.g,e.b,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.ext=this.getWebGLExtensions(),this.screenVBO=this.cVBO([-1,1,0,1,1,0,-1,-1,0,1,-1,0]),this.screenIBO=this.cIBO([0,1,2,1,3,2])}getProgram(t,e){var n=this.cShader(t,this.gl.VERTEX_SHADER),i=this.cShader(e,this.gl.FRAGMENT_SHADER);return this.program.push(new r(this.cProgram(n,i))),this.program.length-1}cShader(t,e){var n=this.gl.createShader(e);return this.gl.shaderSource(n,t),this.gl.compileShader(n),this.gl.getShaderParameter(n,this.gl.COMPILE_STATUS)?n:(console.log(this.gl.getShaderInfoLog(n)),null)}cProgram(t,e){let n=this.gl.createProgram();return this.gl.attachShader(n,t),this.gl.attachShader(n,e),this.gl.linkProgram(n),this.gl.getProgramParameter(n,this.gl.LINK_STATUS)?(this.gl.useProgram(n),n):(console.log(alert(this.gl.getProgramInfoLog(n))),null)}addAttribute(t,e,n){this.program[t].attLocation[e]=this.gl.getAttribLocation(this.program[t].program,e),this.program[t].attStride[e]=n}setAttribute(t,e,n){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,e.data),this.gl.enableVertexAttribArray(this.currentProgram.attLocation[t]),this.gl.vertexAttribPointer(this.currentProgram.attLocation[t],this.currentProgram.attStride[t],this.gl.FLOAT,!1,0,0),this.currentProgram.VBOLength=e.length/this.currentProgram.attStride[t],n&&(this.currentProgram.indexLength=n.length,this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,n.data))}addUniform(t,e,n){this.program[t].uniLocation[e]=this.gl.getUniformLocation(this.program[t].program,e),this.program[t].uniType[e]=n}setUniform(t,e){let n=this.currentProgram.uniType[t];switch(n){case"uniformMatrix4fv":this.gl[n](this.currentProgram.uniLocation[t],!1,e);break;default:this.gl[n](this.currentProgram.uniLocation[t],e)}}cVBO(t){let e=this.gl.createBuffer();return this.gl.bindBuffer(this.gl.ARRAY_BUFFER,e),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(t),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null),{data:e,length:t.length}}cIBO(t){let e=this.gl.createBuffer();return this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,e),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,new Int16Array(t),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,null),{data:e,length:t.length}}cFbuffer(t,e,n,r=!1){this.fBuffer[n]=r?this.getFbufferFloat(t,e,n):this.getFbuffer(t,e,n),this.gl.bindTexture(this.gl.TEXTURE_2D,this.fBuffer[n].texture),this.gl.clearColor(0,0,0,1)}getFbuffer(t,e,n){let r=this.gl.createFramebuffer();this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,r);let i=this.gl.createRenderbuffer();this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,i),this.gl.renderbufferStorage(this.gl.RENDERBUFFER,this.gl.DEPTH_COMPONENT16,t,e),this.gl.framebufferRenderbuffer(this.gl.FRAMEBUFFER,this.gl.DEPTH_ATTACHMENT,this.gl.RENDERBUFFER,i);let o=this.gl.createTexture();return this.gl.activeTexture(this.gl.TEXTURE0+n),this.gl.bindTexture(this.gl.TEXTURE_2D,o),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,t,e,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,null),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,o,0),this.gl.bindTexture(this.gl.TEXTURE_2D,null),this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,null),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),{framebuffer:r,renderbuffer:i,texture:o}}getFbufferFloat(t,e,n){if(null==this.ext||null==this.ext.textureFloat&&null==this.ext.textureHalfFloat)return void console.log("float texture not support");let r=this.ext.textureHalfFloat.HALF_FLOAT_OES,i=this.gl.createFramebuffer();this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,i);let o=this.gl.createTexture();return this.gl.activeTexture(this.gl.TEXTURE0+n),this.gl.bindTexture(this.gl.TEXTURE_2D,o),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,t,e,0,this.gl.RGBA,r,null),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.NEAREST),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.NEAREST),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,o,0),this.gl.bindTexture(this.gl.TEXTURE_2D,null),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),{framebuffer:i,texture:o}}selectFramebuffer(t){if(null==t)this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null);else{if(!this.fBuffer[t])return void console.log("unknown fbuffer");this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.fBuffer[t].framebuffer)}}selectUseProgram(t){this.currentProgram=this.program[t],this.gl.useProgram(this.currentProgram.program)}drawArrays(t){this.gl.drawArrays(t,0,this.currentProgram.VBOLength)}drawElements(){this.gl.drawElements(this.gl.TRIANGLES,this.currentProgram.indexLength,this.gl.UNSIGNED_SHORT,0)}clear(){this.gl.clear(this.gl.COLOR_BUFFER_BIT)}flush(){this.gl.flush()}getWebGLExtensions(){return{elementIndexUint:this.gl.getExtension("OES_element_index_uint"),textureFloat:this.gl.getExtension("OES_texture_float"),textureHalfFloat:this.gl.getExtension("OES_texture_half_float")}}}},function(t,e){t.exports=class{constructor(t){this.program=t,this.attLocation={},this.attStride={},this.uniLocation={},this.uniType={},this.VBOLength=0,this.indexLength=0}}},function(t,e){t.exports="precision highp float;\n\nattribute vec3 position;\nvoid main(){\n    gl_Position = vec4(position,1.0);\n}\n"},function(t,e){t.exports="precision highp float;\r\n\r\nuniform sampler2D texture;\r\nuniform vec2 resolution;\r\n\r\n\r\nvoid main(){\r\n    vec2 uv = gl_FragCoord.xy / resolution;\r\n    vec3 c = texture2D(texture,uv).xyz;\r\n\r\n    gl_FragColor = vec4(c,1.0);\r\n}"},function(t,e){t.exports="precision highp float;\n\nuniform vec2 resolution;\nuniform float time;\nuniform sampler2D preFrameTexture; \n\n#define PI 3.1415926535\n\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex \n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : stegu\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//               https://github.com/stegu/webgl-noise\n// \n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v)\n  { \n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = mod289(i); \n  vec4 p = permute( permute( permute( \n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) \n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), \n                                dot(p2,x2), dot(p3,x3) ) );\n  }\n\nfloat snoise(float x){\n    return snoise(vec3(0.0,0.0,x));\n}\nvec3 snoise3D(vec3 p){\n    return vec3(\n        snoise(p + vec3(76.2,35.2,55.2)),\n        snoise(p + vec3(52.2,453.3,674.2)),\n        snoise(p + vec3(234.2,47.2,85.2))\n    );\n    \n}\n\n/*---------------------\n    distance func\n----------------------*/\n\nfloat sdSphere( vec3 p, float s )\n{\n  return length(p)-s;\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return length(max(d,0.0)) + min(max(d.x,max(d.y,d.z)),0.0); \n}\n\nfloat sdTorus( vec3 p, vec2 t )\n{\n  vec2 q = vec2(length(p.xz)-t.x,p.y);\n  return length(q)-t.y;\n}\n\nfloat sdCone( vec3 p, vec2 c )\n{\n    // c must be normalized\n    float q = length(p.xy);\n    return dot(c,vec2(q,p.z));\n}\n\nmat2 rotate(float rad){\n    return mat2(cos(rad),sin(rad),-sin(rad),cos(rad));\n}\n\nvec3 loop(vec3 p,float s){\n    p = mod(p,s) - s / 2.0;\n    return p;\n}\n\nvec3 fold(vec3 p){\n    p.xy *= rotate(exp(-mod(time * 10.0,6.0)));\n    p.xz *= rotate(exp(-mod(time * 10.0,8.0)));\n    for(int i = 0; i < 20; i++){\n        p.zy = abs(p.zy);\n        p.xy *= rotate(time * 0.23);\n        p.xz = abs(p.xz);\n        p.xz *= rotate(time * 0.3);\n    }\n    return p;\n}\n\nfloat distance(vec3 p){\n    float d;\n    p = loop(p,8.0);\n    p = fold(p);\n    d = sdBox(p - vec3(0.0,0.0,0.0),vec3(1.0,1.0,1.0) * 1.2);\n\n    return d;\n}\n\nvec3 getNormal(vec3 p,float d){\n    vec3 dx = vec3(d,0.0,0.0);\n    vec3 dy = vec3(0.0,d,0.0);\n    vec3 dz = vec3(0.0,0.0,d);\n    vec3 result;\n    result.x = distance(p + dx) - distance(p - dx);\n    result.y = distance(p + dy) - distance(p - dy);\n    result.z = distance(p + dz) - distance(p - dz);\n    return normalize(result);\n}\n\nvoid main(void)\n{\n    const float angle = 60.0;\n    const float fov = angle * 0.5 * PI / 180.0;\n    vec3 cPos = vec3(0.0,0.0,5.0)+ vec3(0.0,0.0,-time * 10.0);\n\n\n    vec2 uv = (gl_FragCoord.xy * 2.0  - resolution ) / min(resolution.x,resolution.y);\n    vec3 ray = normalize(vec3(sin(fov) * uv.x,sin(fov) * uv.y,-1.0));\n    ray.xz *= rotate(snoise(time * 0.5 + 303.0) * 0.1);\n    ray.yz *= rotate(snoise(time * 0.4 ) * 0.1);\n    ray.xy *= rotate(snoise(time * 0.4 + 990.9) * 0.1);\n\n    float rDistance = 0.0;\n    float rLen = 0.0;\n    vec3 p = cPos;\n    vec3 c = vec3(0.0);\n    float light = 0.0;\n\n    for(int i = 0; i < 64; i++){\n        rDistance = distance(p);\n        rLen += rDistance;\n        light += max(0.0,1.0 - rDistance) * .03;\n        p = cPos + ray * rLen;\n    }\n\n    if(abs(rDistance) <= 0.01){\n        vec3 normal = getNormal(p,0.001);\n        float diff = clamp(dot(vec3(0.5,0.5,0.5), normal), 0.1, 1.0);\n        \n        vec3 edge = vec3(length(normal - getNormal(p, 0.09)) * max(0.0,sin(rLen + time * 10.0)) * 10.0);\n        edge.x += sin(rLen) * 0.7;\n        \n        c = vec3(edge + diff * (1.0 - max(0.0,(rLen * 0.03))));\n    }else{\n        c = vec3(0.0,0.0,0.0);\n    }\n\n    \n    gl_FragColor = vec4(c,1.0);\n}"}]);